//актуализирован 17/02/22 13.56

@use "sass:math";

// Подключение миксинов ===========================================================================================================================================================================================================================================================================
@import "base/mixins";

// Подключение шрифтов ===========================================================================================================================================================================================================================================================================

//&display=swap - добавить при подключении через плагин

// Подключить если есть локальные файлы шрифтов
@import "fonts/fonts";

// Подключение иконочных шрифтов ==============================================================================================================================================================================================================================================================================
// Подключить если есть файл иконочного шрифта
@import "fonts/icons";

// Шрифт по умолчанию ==============================================================================================================================================================================================================================================================================
$fontFamily: 'Montserrat', sans-serif;
$fontSize: rem(25); // где 14(px) - размер шрифта по умолчанию из макета
$fontWeight: 400;
$letterSpacing: 0.02;

//===================================== ▼ ▼ ▼ ОСНОВНЫЕ ЦВЕТА ▼ ▼ ▼===============================================
// цвета шрифтов
$mainTextColor: rgba(200, 200, 200, 1); // Цвет шрифта по умолчанию
$textColor2: rgba(100, 100, 100, 1); //menu
$textColor3: rgba(255, 255, 255, 1); //menu active
$textColor4: rgba(40, 120, 190, 1);
$textColor5: rgba(150, 150, 150, 1);
//$textColor5: ;

// цвета фонов
$mainBackgroundColor: rgba(0, 0, 0, 1); //Цвет фона по умолчанию
$backgroundColor2: rgba(0, 0, 0, 0.7); // overlays _lock
$backgroundColor3: rgba(0, 0, 0, 0.3);
$backgroundColor4: rgba(40, 120, 190, 1);
// $backgroundColor5: rgba(220, 220, 220, 0.3);
// $backgroundColor6: rgba(0, 160, 255, 1);

// цвета границ
$mainBorderColor: rgba(255, 255, 255, 0.08); //Цвет границ по умолчанию
//$borderColor2: rgba(255, 255, 255, .08);
// $borderColor3: rgba(0, 0, 0, 1);
// $borderColor4: rgba(0, 160, 255, 1);
//$borderColor5: ;

// НАСТРОЙКИ ===============================================================================================================================================================================================================================================================================================
// Минимальная ширина страницы
$minWidth: 280;
// Ширина полотна (макета)
$maxWidth: 1920;
// Ширина ограничивающего контейнера (0 = нет ограничения)
$maxWidthContainer: 0;
// Общий отступ у контейнера
// (30 = по 15px слева и справа, 0 = нет отступа)
$containerPadding: 30;

// Ширина срабатывания первого брейкпоинта
$containerWidth: $maxWidthContainer + $containerPadding;

// Брейк-поинты
$pc: em($containerWidth); // ПК, ноутбуки, некоторые планшеты в горизонтальном положении
$tablet: em(991.98); // Планшеты, некоторые телефоны в горизонтальном положении 720
$mobile: em(767.98); // Телефоны L 540
$mobileSmall: em(576.98); // Телефоны S padding: 15px

// Тип адаптива:
// 1 = отзывчивость (у контейнера нет брейкпоинтов),
// 2 = по брейк-поинтам (контейнер меняет свою ширину по брейк-поинтам)
$responsiveType: 1;

// Обнуление и общие параметры ========================================================
@import "base/null.scss";

// Ограничивающий контейнер ======================================================================================================================================================================================================================

/*
(i) Стили будут применяться ко 
всем классам содержащим *__container
Например header__container, main__container и т.д.
Снипет (HTML): cnt
*/
@if ($responsiveType==1) {
	// Отзывчивая
	[class*="__container"] {
		@if ($maxWidthContainer>0) {
			max-width: rem($maxWidthContainer);
			box-sizing: content-box;
			margin: 0 auto;
		}
		@if ($containerPadding>0) {
			//padding: 0 rem(math.div($containerPadding, 2));
			@include adaptiveValue("padding-left", 70, 15, 1200, 576, 1);
			@include adaptiveValue("padding-right", 70, 15, 1200, 576, 1);
		}
	}
} @else {
	// По брейк-поинтам
	[class*="__container"] {
		margin: 0 auto;
		@if ($maxWidthContainer>0) {
			max-width: rem($maxWidthContainer);
			box-sizing: content-box;
		} @else {
			@if ($containerPadding>0) {
				padding: 0 rem(math.div($containerPadding, 2));
			}
		}
		//--------------------------------------------MD 1: $mw + 20;--------------------------------------
		@media (max-width: $pc) {
			max-width: rem(970);
		}
		//-----------------------------------------------MD 2: 991.98----------------------------------------------
		@media (max-width: $tablet) {
			max-width: rem(750);
		}
		//-----------------------------------------------MD 3: 767.98-----------------------------------------------
		@media (max-width: $mobile) {
			max-width: rem(540);
		}
		//-----------------------------------------------MD 4: 576.98-----------------------------------------------
		@media (max-width: $mobileSmall) {
			max-width: none;
			@if ($containerPadding>0 and $maxWidthContainer>0) {
				padding: 0 rem(math.div($containerPadding, 2));
			}
		}
	}
}

// ._container-lg {
// 	position: relative;
// 	margin: 0 auto;
// 	width: 100%;
// 	max-width: 100%;
// 	padding: 0 3%;
// }

//==================================== ▼ ▼ ▼ ГЛОБАЛЬНЫЕ СТИЛИ ▼ ▼ ▼==========================================
$scrollbarWidth: 16px; //ширина скроллбара браузера для коррекции
$overlayZindex: 149; //индекс глобального оверлея

// html.lock .wrapper {
// 	pointer-events: none;
// }

html *{
	//cursor: none;
}



body {
	//position: relative;
	// universal overlay
	overflow: hidden;
	&::after {
		content: "";
		background-color: rgba(0, 0, 0, 0.5);
		backdrop-filter: blur(20px);
		position: fixed;
		width: 100%;
		height: 100%;
		top: 0;
		left: 0;
		opacity: 0;
		transition: all 0.5s ease 0s;
		pointer-events: none;
		z-index: $overlayZindex;
	}
	// Скролл заблокирован
	&._preloader {
		overflow: hidden;
	}
	.lock.loaded & {
		overflow: hidden;
		touch-action: none;
	}
	// Сайт загружен
	// &.loaded.lock {
	//padding-right: calc($scrollbarWidth - 0.5px) !important; // общая коррекция контента на скролл при модалке/меню
	// 	& header,
	// 	.__popup-link {
	// 		padding-right: calc(
	// 			$scrollbarWidth - 0.5px
	// 		) !important; // коррекция хедера на скролл при модалке/меню если header position fixed ил relative
	// 	}
	// }
}
// Оболочка =======================================================================
.wrapper {
	min-height: 100%;
	display: flex;
	flex-direction: column;
	width: 100%;
	height: 100%;
	box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);
	position: relative;
	// Прижимаем footer
	> main {
		flex: 1 1 auto;
		z-index: 3;
	}
	// Фикс для слайдеров
	> * {
		min-width: 0;
	}
}

// Подключение базовых стилей, шаблонов (заготовок) и вспомогательных  классов
// Для подключения/отключения конкретных стилей смотри base.scss
@import "base";

// Подключение стилей общих элементов проекта
@import "common";

// Подключение стилей отдельных блоков
@import "header";
@import "footer";

// Подключение стилей отдельных страниц
@import "home";
